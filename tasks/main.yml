---

- name: Install required apt packages
  become: yes
  ansible.builtin.package:
    name: 
      - git
      - which
      - openssl
    state: present

- name: Check if mailcow installation directory exists
  become: yes
  stat:
    path: "{{ mailcow__install_path }}"
  register: mailcow_installed

- name: Clone mailcow git repo
  become: yes
  git:
    repo: 'https://github.com/mailcow/mailcow-dockerized.git'
    version: "{{ mailcow__git_version }}"
    umask: '022'
    update: false
    dest: "{{ mailcow__install_path }}"
  when: not mailcow_installed.stat.exists

- name: Generate mailcow.conf file
  shell: ./generate_config.sh
  environment:
    MAILCOW_HOSTNAME: "{{ mailcow__hostname }}"
    MAILCOW_TZ: "{{ mailcow__timezone }}"
    MAILCOW_BRANCH: "{{ mailcow__git_version }}"
  args:
    executable: /bin/bash
    chdir: "{{ mailcow__install_path }}"
    creates: mailcow.conf
  tags:
    - skip_ansible_lint

- name: Template settings for mailcow.conf
  import_tasks: mailcowconf.yml

- name: Configure Rspamd
  import_tasks: rspamd.yml

- name: Template settings for Nginx
  import_tasks: nginx.yml

- name: Copy vars.local.inc.php
  become: yes
  template:
    src: vars.local.inc.php.j2
    dest: "{{ mailcow__install_path }}/data/web/inc/vars.local.inc.php"

- name: Check if mailcow containers are running
  become: yes
  community.docker.docker_container_info:
    name: "{{ mailcow__docker_compose_project_name }}-nginx-mailcow-1"
  register: mailcow_running

- name: Add traefik labels to docker-compose
  ansible.builtin.blockinfile:
    path: "{{ mailcow__install_path }}/docker-compose.yml"
    marker: "# {mark} TRAEFIK LABELS"
    insertafter: "^    nginx-mailcow:"
    block: |
      {% filter indent(width=6, first=true) %}
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.mailcow-sec.loadbalancer.server.port=443"
        - "traefik.http.services.mailcow.loadbalancer.server.port=80"
        - "traefik.http.routers.mailcow-sec.rule=Host(`{{ mailcow__hostname }}`)"
        - "traefik.docker.network=web_backend"
        - "traefik.http.routers.mailcow-sec.tls=true"
        - "traefik.http.routers.mailcow-sec.tls.certResolver=letsdns"
        - "traefik.http.routers.mailcow.rule=Host(`{{ mailcow__hostname }}`)"
        - "traefik.http.routers.mailcow-sec.middlewares=mailcow-sslheaders"
        - "traefik.http.middlewares.mailcow-sslheaders.headers.customrequestheaders.X-Forwarded-Proto=https"
      {% endfilter %}

- name: Replace port forwarding by port exposing
  ansible.builtin.replace:
    path: "{{ mailcow__install_path }}/docker-compose.yml"
    regexp: '^(    nginx-mailcow:(?:.|\n)*?)ports:(.|\n)*?80\}"'
    #after: '^    nginx-mailcow:'
    replace: |
      \1
      {% filter indent(width=6, first=true) %}
      expose:
        - 443
        - 80
      {% endfilter %}

- name: Add nginx container to web_backend network
  ansible.builtin.blockinfile:
    path: "{{ mailcow__install_path }}/docker-compose.yml"
    marker: "# {mark} NETWORK JOIN"
    insertafter: "(?m)^    nginx-mailcow:(.|\n)*?- nginx"
    block: |
      {% filter indent(width=8, first=true) %}
      web_backend:
      {% endfilter %}

- name: Add nginx container to web_backend network
  ansible.builtin.blockinfile:
    path: "{{ mailcow__install_path }}/docker-compose.yml"
    marker: "# {mark} NETWORK DECLARATION"
    insertafter: "^networks:"
    block: |
      {% filter indent(width=2, first=true) %}
      web_backend:
        external: true
      {% endfilter %}


- name: Start mailcow container stack
  become: yes
  shell: |
    {{ mailcow__compose_command }} --project-name {{ mailcow__docker_compose_project_name }} up -d
  args:
    chdir: "{{ mailcow__install_path }}"
  when: not mailcow_running.exists

- name: Update mailcow
  include_tasks: update.yml
  when:
    - mailcow_running.exists
    - mailcow__install_updates
